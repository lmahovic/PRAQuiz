{"ast":null,"code":"import { interval } from \"rxjs\";\nimport { ApiServiceAdmin } from \"../../services/api.service-admin\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service-admin\";\nimport * as i2 from \"../../services/state.service-admin\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./admin-answer-element/admin-answer-element.component\";\n\nfunction AdminQuestionScreenComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"app-admin-answer-element\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const answer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"answer\", answer_r1);\n  }\n}\n\nexport let AdminQuestionScreenComponent = /*#__PURE__*/(() => {\n  class AdminQuestionScreenComponent {\n    constructor(apiService, stateService, router) {\n      this.apiService = apiService;\n      this.stateService = stateService;\n      this.router = router;\n      this.remainingTime = 0;\n      this.playersAnswered = 0;\n    }\n\n    ngOnInit() {\n      this.question = this.stateService.getCurrentQuestionAfterCount();\n      this.remainingTime = this.question.timeLimit;\n      const secondInterval$ = interval(1000);\n      this.secondIntervalSub = secondInterval$.subscribe(() => {\n        if (this.remainingTime > 0) {\n          this.remainingTime--;\n        }\n      });\n      const interval$ = interval(ApiServiceAdmin.pingInterval);\n      let playerAnswers;\n      const intervalSub = interval$.subscribe(() => this.apiService.getPlayerQuestionAnswers(this.stateService.game.id, this.stateService.getCurrentQuestionAfterCount().id).subscribe(response => {\n        playerAnswers = response;\n        this.apiService.checkOtherPlayersNotWaiting(playerAnswers[0].id).subscribe(response => {\n          if (response) {\n            intervalSub.unsubscribe();\n            this.stateService.isTimeUp = playerAnswers.some(x => x.answerId === null && x.answerTime === this.question.timeLimit);\n            this.stateService.playerQuestionAnswersByQuestion[this.stateService.getCurrentQuestionNumber() - 1] = playerAnswers;\n            this.router.navigate([\"admin/info-screen\"]);\n          }\n        });\n      }));\n    }\n\n  }\n\n  AdminQuestionScreenComponent.ɵfac = function AdminQuestionScreenComponent_Factory(t) {\n    return new (t || AdminQuestionScreenComponent)(i0.ɵɵdirectiveInject(i1.ApiServiceAdmin), i0.ɵɵdirectiveInject(i2.StateServiceAdmin), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  AdminQuestionScreenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminQuestionScreenComponent,\n    selectors: [[\"app-admin-question-screen\"]],\n    decls: 17,\n    vars: 4,\n    consts: [[1, \"d-flex\", \"flex-column\", \"vw-100\", \"p-5\"], [1, \"row\", \"d-flex\", \"align-items-center\", \"justify-content-between\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-center\", \"text-center\", \"mb-3\", \"col-lg-6\", \"col-12\", \"question-area\", \"order-lg-2\"], [1, \"mb-lg-5\", \"col-lg-3\", \"col-6\", \"order-lg-1\"], [1, \"text-center\", \"mb-lg-5\", \"col-lg-3\", \"col-6\", \"order-lg-3\"], [1, \"fs-3\", \"fw-bold\", \"mb-0\"], [1, \"fs-5\", \"fw-bold\", \"mb-1\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-around\", \"mt-lg-5\"], [1, \"row\", \"d-flex\", \"align-items-center\", \"mb-xl-5\"], [\"class\", \"col-lg-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-lg-6\"], [1, \"passiveAnswerElement\", 3, \"answer\"]],\n    template: function AdminQuestionScreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"h3\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"h3\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelementStart(10, \"p\", 5);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\", 6);\n        i0.ɵɵtext(13, \"Answers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"div\", 7);\n        i0.ɵɵelementStart(15, \"div\", 8);\n        i0.ɵɵtemplate(16, AdminQuestionScreenComponent_div_16_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.question === undefined ? \"\" : ctx.question.questionText);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Remaining time: \", ctx.remainingTime, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.playersAnswered);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.question.answers);\n      }\n    },\n    directives: [i4.NgForOf, i5.AdminAnswerElementComponent],\n    styles: [\".question-area[_ngcontent-%COMP%]{background-color:#dcdcdc;min-height:15rem}\"]\n  });\n  return AdminQuestionScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}