{"ast":null,"code":"import { ApiService } from \"../../services/api.service\";\nimport { interval } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"../../services/state.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../common/abort-button/abort-button.component\";\nexport let LobbyScreenComponent = /*#__PURE__*/(() => {\n  class LobbyScreenComponent {\n    constructor(apiService, stateService, router) {\n      this.apiService = apiService;\n      this.stateService = stateService;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.stateService.showStatusBar = false;\n      this.stateService.showLanguageSelector = false;\n      this.apiService.getQuestions(this.stateService.getGame().quizId).subscribe(response => {\n        // @ts-ignore\n        this.stateService.saveQuestionsAnswersState(response.body);\n        console.log(this.stateService.getQuestionsAnswersState());\n        const playerId = this.stateService.getPlayer().id; //@todo obriši test\n        // //TEST\n        // const testPlayer : PlayerViewModel = {\n        //   id:1,\n        //   gameId:1,\n        //   nickname: \"test!\"\n        // }\n        // const playerId=testPlayer.id;\n        // this.stateService.setPlayer(testPlayer);\n\n        const questionId = this.stateService.getCurrentQuestionBeforeCount().id;\n        this.checkForNextQuestionLobby(playerId, questionId);\n      });\n    }\n\n    checkForNextQuestionLobby(playerId, questionId) {\n      const interval$ = interval(ApiService.pingInterval);\n      const sub = interval$.subscribe(() => {\n        this.apiService.getQuestionStatus(playerId, questionId).subscribe(response => {\n          console.log(\"Ping iz lobbya - \" + playerId + \" \" + questionId);\n\n          if (response.body !== 0) {\n            sub.unsubscribe();\n            this.stateService.lastPlayerAnswer.id = response.body;\n            this.stateService.statusBarLobbyEntered = true;\n            this.router.navigate([\"player/next-question\"]);\n          }\n        });\n      });\n    }\n\n  }\n\n  LobbyScreenComponent.ɵfac = function LobbyScreenComponent_Factory(t) {\n    return new (t || LobbyScreenComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.StateService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  LobbyScreenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LobbyScreenComponent,\n    selectors: [[\"app-lobby-screen\"]],\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"text-center\"], [1, \"mb-5\"]],\n    template: function LobbyScreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h3\", 1);\n        i0.ɵɵtext(2, \"Lobby successfully entered\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"Waiting for the game to begin...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"app-abort-button\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i4.AbortButtonComponent],\n    styles: [\"\"]\n  });\n  return LobbyScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}