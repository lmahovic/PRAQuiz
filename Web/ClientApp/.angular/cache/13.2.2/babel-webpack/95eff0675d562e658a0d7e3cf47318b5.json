{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/api.service-admin\";\nimport * as i3 from \"../../services/state.service-admin\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = [\"f\"];\n\nfunction EntryFormAdminComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.parameterName, \" must not be empty!\");\n  }\n}\n\nfunction EntryFormAdminComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.serverErrorMessage);\n  }\n}\n\nexport let EntryFormAdminComponent = /*#__PURE__*/(() => {\n  class EntryFormAdminComponent {\n    constructor(route, router, apiService, stateService) {\n      this.route = route;\n      this.router = router;\n      this.apiService = apiService;\n      this.stateService = stateService;\n      this.serverOk = true;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.parameter = params['parameter'];\n\n        if (this.parameter === 'Email') {\n          this.parameterName = \"Email\";\n        } else {\n          console.log(this.stateService.getAuthor());\n          this.parameterName = \"Password\";\n        }\n      });\n    }\n\n    onSubmit() {\n      var _a, _b; // @ts-ignore\n\n\n      if (this.parameter === 'Email') {\n        this.apiService.checkEmail((_a = this.form) === null || _a === void 0 ? void 0 : _a.value.inputValue).subscribe(response => {\n          // @ts-ignore\n          this.form.reset();\n          this.serverOk = true; // @ts-ignore\n\n          this.stateService.setAuthor(response.body);\n          this.router.navigate(['admin/entryForm/Password']);\n        }, () => {\n          // @ts-ignore\n          this.form.reset();\n          this.serverOk = false;\n          this.serverErrorMessage = \"Author with specified email not found!\";\n        }, () => {});\n      } else {\n        const password = (_b = this.form) === null || _b === void 0 ? void 0 : _b.value.inputValue;\n        this.apiService.checkPassword(this.stateService.getAuthor().id, password).subscribe(response => {\n          // @ts-ignore\n          this.form.reset();\n\n          if (response) {\n            this.serverOk = true;\n            console.log(this.stateService.getAuthor());\n            this.router.navigate(['admin/quiz-select']);\n          } else {\n            this.serverOk = false;\n            this.serverErrorMessage = \"Incorrect password!\";\n          }\n        }, () => {\n          // @ts-ignore\n          this.form.reset();\n          this.serverOk = false;\n          this.serverErrorMessage = \"Author not found!\";\n        }, () => {});\n      }\n    }\n\n  }\n\n  EntryFormAdminComponent.ɵfac = function EntryFormAdminComponent_Factory(t) {\n    return new (t || EntryFormAdminComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ApiServiceAdmin), i0.ɵɵdirectiveInject(i3.StateServiceAdmin));\n  };\n\n  EntryFormAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EntryFormAdminComponent,\n    selectors: [[\"app-entry-form-admin\"]],\n    viewQuery: function EntryFormAdminComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.form = _t.first);\n      }\n    },\n    decls: 15,\n    vars: 6,\n    consts: [[1, \"container\"], [1, \"display-1\", \"mb-5\"], [1, \"display-5\", \"mb-5\"], [1, \"card\", \"p-4\", \"mb-5\", 2, \"width\", \"24rem\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"mb-3\"], [\"type\", \"text\", \"id\", \"parameter\", \"name\", \"inputValue\", \"required\", \"\", \"ngModel\", \"\", 1, \"form-control\", 3, \"placeholder\"], [\"u\", \"ngModel\"], [\"class\", \"form-text\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", \"form-control\", 3, \"disabled\"], [1, \"form-text\"]],\n    template: function EntryFormAdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"p\", 1);\n        i0.ɵɵtext(2, \"PRA QUIZ\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\", 2);\n        i0.ɵɵtext(4, \"Admin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function EntryFormAdminComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelement(9, \"input\", 7, 8);\n        i0.ɵɵtemplate(11, EntryFormAdminComponent_span_11_Template, 2, 1, \"span\", 9);\n        i0.ɵɵtemplate(12, EntryFormAdminComponent_span_12_Template, 2, 1, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 10);\n        i0.ɵɵtext(14, \"Enter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(7);\n\n        const _r1 = i0.ɵɵreference(10);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵclassProp(\"not-found\", !ctx.serverOk && !_r1.touched);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.parameterName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && _r1.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.serverOk && !_r1.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i5.NgIf],\n    styles: [\"*[_ngcontent-%COMP%]{text-align:center}input.ng-invalid.ng-touched[_ngcontent-%COMP%], input.not-found[_ngcontent-%COMP%]{border:1px solid red}\"]\n  });\n  return EntryFormAdminComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}