{"ast":null,"code":"import { interval } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"../../services/state.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./answer-element/answer-element.component\";\n\nfunction QuestionScreenComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"app-answer-element\", 4);\n    i0.ɵɵlistener(\"click\", function QuestionScreenComponent_div_6_Template_app_answer_element_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const answer_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.processAnswer(answer_r1.id);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const answer_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"answer\", answer_r1);\n  }\n}\n\nexport let QuestionScreenComponent = /*#__PURE__*/(() => {\n  class QuestionScreenComponent {\n    constructor(apiService, stateService, router) {\n      this.apiService = apiService;\n      this.stateService = stateService;\n      this.router = router;\n      this.remainingTime = 0;\n    }\n\n    ngOnInit() {\n      this.question = this.stateService.getCurrentQuestionAfterCount();\n      this.remainingTime = this.question.timeLimit;\n      this.startTime = new Date();\n      const secondInterval$ = interval(1000);\n      this.secondIntervalSub = secondInterval$.subscribe(() => {\n        this.remainingTime--;\n\n        if (this.remainingTime === 0) {\n          this.processPointsUpdate(0, this.question.timeLimit * 1000);\n        }\n      });\n    }\n\n    processAnswer(selectedAnswerId) {\n      const answerTime = new Date();\n      const answerTimeDiff = answerTime.getTime() - this.startTime.getTime();\n      this.processPointsUpdate(selectedAnswerId, answerTimeDiff);\n    }\n\n    processPointsUpdate(selectedAnswerId, answerTimeDiff) {\n      var _a;\n\n      (_a = this.secondIntervalSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      this.stateService.lastPlayerAnswer.answerId = selectedAnswerId;\n      this.stateService.lastPlayerAnswer.answerTime = answerTimeDiff;\n      this.stateService.lastPlayerAnswer.playerId = this.stateService.getPlayer().id;\n      this.stateService.lastPlayerAnswer.points = 0;\n      this.stateService.lastPlayerAnswer.questionId = this.question.id;\n      this.apiService.putAnswer(this.stateService.lastPlayerAnswer).subscribe(points => {\n        this.stateService.addToTotalPoints(points);\n        this.apiService.checkOtherPlayersNotWaiting(this.stateService.lastPlayerAnswer.id).subscribe(response => {\n          if (response) {\n            this.router.navigate([\"player/info-screen\"]);\n          } else {\n            this.router.navigate([\"player/wait-screen\"]);\n          }\n        });\n      });\n    }\n\n  }\n\n  QuestionScreenComponent.ɵfac = function QuestionScreenComponent_Factory(t) {\n    return new (t || QuestionScreenComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.StateService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  QuestionScreenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionScreenComponent,\n    selectors: [[\"app-question-screen\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"text-center\", \"mb-5\"], [1, \"row\", \"d-flex\", \"align-items-center\", \"mb-xl-5\"], [\"class\", \"col-lg-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-lg-6\"], [3, \"answer\", \"click\"]],\n    template: function QuestionScreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"h3\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵtemplate(6, QuestionScreenComponent_div_6_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 0);\n        i0.ɵɵelementStart(8, \"h3\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.question === undefined ? \"\" : ctx.question.questionText);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.question.answers);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Remaining time: \", ctx.remainingTime, \"\");\n      }\n    },\n    directives: [i4.NgForOf, i5.AnswerElementComponent],\n    styles: [\"\"]\n  });\n  return QuestionScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}